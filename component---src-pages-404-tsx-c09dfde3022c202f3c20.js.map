{"version":3,"sources":["webpack:///./src/pages/404.tsx"],"names":["SiteNavCenter","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","ErrorTemplate","emotion__WEBPACK_IMPORTED_MODULE_0__","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_layouts__WEBPACK_IMPORTED_MODULE_8__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_7__","className","SiteHeader","outer","_components_header_SiteNavLogo__WEBPACK_IMPORTED_MODULE_5__","id","inner","style","textAlign","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","PostFeed","map","_ref","node","_components_PostCard__WEBPACK_IMPORTED_MODULE_6__","key","fields","slug","post","pageQuery"],"mappings":"4OAaMA,EAAgBC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,6GAWbC,EAAaL,OAAAM,EAAA,EAAAN,CAAA,CAAAG,KAAA,UAAAC,OAAA,qBAIbG,EAAYP,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,6EAQTI,EAAmBR,OAAAC,EAAA,EAAAD,CAAA,KAAHE,OAAA,aAAGF,CAAH,kBAEXS,IAAOC,QAFI,sDAQhBC,EAASX,OAAAM,EAAA,EAAAN,CAAA,CAAAG,KAAA,SAAAC,OAAA,yCAsDAQ,UAtCsD,SAAAC,GAAS,IACpEC,EAAUD,EAAME,KAAKC,kBAArBF,MAER,OACEd,OAAAiB,EAAA,EAAAjB,CAACkB,EAAA,EAAD,KACElB,OAAAiB,EAAA,EAAAjB,CAACmB,EAAA,EAAD,KACEnB,OAAAiB,EAAA,EAAAjB,CAAA,UAAQoB,UAAcC,IAAL,IAAmBC,KAClCtB,OAAAiB,EAAA,EAAAjB,CAAA,OAAKoB,UAAU,SACbpB,OAAAiB,EAAA,EAAAjB,CAACD,EAAD,KACEC,OAAAiB,EAAA,EAAAjB,CAACuB,EAAA,EAAD,SAINvB,OAAAiB,EAAA,EAAAjB,CAAA,QAAMwB,GAAG,YAAYJ,UAAcf,EAAL,IAAsBiB,KAClDtB,OAAAiB,EAAA,EAAAjB,CAAA,OAAKoB,UAAS,GAAKK,KACjBzB,OAAAiB,EAAA,EAAAjB,CAAA,WAAS0B,MAAO,CAAEC,UAAW,WAC3B3B,OAAAiB,EAAA,EAAAjB,CAACO,EAAD,YACAP,OAAAiB,EAAA,EAAAjB,CAACQ,EAAD,uBACAR,OAAAiB,EAAA,EAAAjB,CAAC4B,EAAA,KAAD,CAAMR,UAAS,GAAKT,EAAakB,GAAI,IAArC,6BAMN7B,OAAAiB,EAAA,EAAAjB,CAAA,SAAOoB,UAAS,GAAKE,KACnBtB,OAAAiB,EAAA,EAAAjB,CAAA,OAAKoB,UAAS,GAAKK,KACjBzB,OAAAiB,EAAA,EAAAjB,CAAA,OAAKoB,UAAS,GAAKU,KAChBhB,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTjC,OAAAiB,EAAA,EAAAjB,CAACkC,EAAA,EAAD,CAAUC,IAAKF,EAAKG,OAAOC,KAAMC,KAAML,YAYhD,IAAMM,EAAS","file":"component---src-pages-404-tsx-c09dfde3022c202f3c20.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport SiteNavLogo from '../components/header/SiteNavLogo';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\nimport { PageContext } from '../templates/post';\n\nconst SiteNavCenter = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  .site-nav-logo {\n    margin-right: 0;\n  }\n`;\n\nconst ErrorTemplate = css`\n  padding: 7vw 4vw;\n`;\n\nconst ErrorCode = styled.h1`\n  margin: 0;\n  font-size: 12vw;\n  line-height: 1em;\n  letter-spacing: -5px;\n  opacity: 0.3;\n`;\n\nconst ErrorDescription = styled.p`\n  margin: 0;\n  color: ${colors.midgrey};\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 400;\n`;\n\nconst ErrorLink = css`\n  display: inline-block;\n  margin-top: 5px;\n`;\n\ninterface NotFoundTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: PageContext;\n      }[];\n    };\n  };\n}\n\nconst NotFoundPage: React.FunctionComponent<NotFoundTemplateProps> = props => {\n  const { edges } = props.data.allMarkdownRemark;\n\n  return (\n    <IndexLayout>\n      <Wrapper>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className=\"inner\">\n            <SiteNavCenter>\n              <SiteNavLogo />\n            </SiteNavCenter>\n          </div>\n        </header>\n        <main id=\"site-main\" className={`${ErrorTemplate} ${outer}`}>\n          <div className={`${inner}`}>\n            <section style={{ textAlign: 'center' }}>\n              <ErrorCode>404</ErrorCode>\n              <ErrorDescription>Page not found</ErrorDescription>\n              <Link className={`${ErrorLink}`} to={''}>\n                Go to the front page â†’\n              </Link>\n            </section>\n          </div>\n        </main>\n        <aside className={`${outer}`}>\n          <div className={`${inner}`}>\n            <div className={`${PostFeed}`}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </aside>\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 100) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}