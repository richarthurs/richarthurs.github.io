{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/components/icons/resume.tsx","webpack:///./src/components/subsribe/SubscribeLogo.tsx","webpack:///./src/components/subsribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/subsribe/SubscribeForm.tsx"],"names":["SiteFooter","Object","emotion__WEBPACK_IMPORTED_MODULE_0__","setLightness","colors","darkgrey","SiteFooterContent","name","styles","SiteFooterNav","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","Footer","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","className","outer","inner","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","config","title","Date","getFullYear","Resume","core_browser_esm","SubscribeOverlayLogo","styled_base_browser_esm","SubscribeLogo","gatsby_browser_entry","query","render","data","logo","src","childImageSharp","fixed","alt","_553450523","SubscribeOverlay","midgrey","Open","emotion_esm","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","props","_this","_React$Component","call","this","escFunction","event","key","close","setState","isOpen","unsubscribeEsc","state","componentWillUnmount","subscribeEsc","document","addEventListener","removeEventListener","open","onClick","subsribe_SubscribeLogo","SubscribeForm","React","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","_this$props$isHome","isHome","SiteNavLogo","role","SocialLink","href","resume","rel","download","showSubscribe","subsribe_SubscribeOverlay","ref","SubscribeFormStyles","SubscribeEmail","lighten","lightgrey","darken","SubscribeFormButton","mix","blue","desaturate","FormGroup","action","mailchimpAction","method","id","noValidate","type","placeholder","style","position","left","aria-hidden","mailchimpName","tabIndex"],"mappings":"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","file":"3-03bd48b9732507a8c27e.js","sourcesContent":["import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <footer className={`${outer} ${SiteFooter}`}>\n      <div className={`${inner} ${SiteFooterContent}`}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n\n          {/* {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )} */}\n\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Resume: React.FunctionComponent = () => (\n    <p>\n        Resume\n    </p>\n//   <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\n//     <path\n//       d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\n//       stroke=\"#fff\"\n//       strokeLinejoin=\"round\"\n//       strokeMiterlimit=\"10\"\n//       fill=\"none\"\n//     />\n//   </svg>\n);\nexport default Resume;\n","import { graphql, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\n\nimport config from '../../website-config';\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/logo-square.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )\n    }\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\nconst SubscribeOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: 0;\n  transition: opacity 200ms ease-in;\n  pointer-events: none;\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--blue) whiteness(+7%)),\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--blue) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`;\n\nconst Open = css`\n  opacity: 1;\n  pointer-events: auto;\n`;\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`;\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`;\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-family: Georgia, serif;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`;\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open() {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  }\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay className={`${this.state.isOpen ? Open : ''}`}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\n            inbox\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport Website from '../icons/website';\nimport Resume from '../icons/resume';\nimport SubscribeModal from '../subsribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\ninterface SiteNaveState {\n  isOpen: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  constructor(props: SiteNavProps) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  }\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav className={`${isHome ? HomeNavRaise : ''} ${SiteNavStyles}`}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul className={`${NavStyles}`} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            {/* <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li> */}\n            <li role=\"menuitem\">\n              <Link to=\"/tags/projects/\">Projects</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/blog-post/\">Blog</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n\n          <SocialLinks>\n              {(\n              <a\n                className={`${SocialLink}`}\n                href={config.resume}\n                target=\"_blank\"\n                title=\"Resume\"\n                rel=\"noopener noreferrer\"\n                download=\"true\"\n              >\n                <Resume />\n              </a>\n            )}\n             {/* {config.facebook && (\n              <a\n                className={`${SocialLink}`}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )} */}\n            {/* {config.twitter && (\n              <a\n                className={`${SocialLink}`}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )} */}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && (\n            <SubscribeModal ref={this.subscribe} />\n          )}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`;\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  border: ${lighten('0.07', colors.lightgrey)};\n  color: ${colors.midgrey};\n  font-size: 1.8rem;\n  line-height: 1em;\n  font-weight: normal;\n  user-select: text;\n  border-radius: 5px;\n  transition: border-color 0.15s linear;\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.lightgrey)};\n  }\n`;\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--blue) whiteness(+7%)),\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--blue) lightness(-4%) saturation(-10%))\n  ); */\n  background: linear-gradient(\n    ${mix('0.1', '#fff', colors.blue)},\n    ${desaturate('0.1', darken('0.07', colors.blue))} 60%,\n    ${desaturate('0.1', darken('0.07', colors.blue))} 90%,\n    ${desaturate('0.1', darken('0.04', colors.blue))}\n  );\n  border-radius: 5px;\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst SubscribeForm: React.FunctionComponent = () => {\n  return (\n      <form\n        className={`${SubscribeFormStyles}`}\n        action={config.mailchimpAction}\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        noValidate\n      >\n        {/* This is required for the form to work correctly  */}\n        <FormGroup className=\"form-group\">\n          <SubscribeEmail className=\"subscribe-email\" type=\"email\" name=\"EMAIL\" placeholder=\"youremail@example.com\" />\n        </FormGroup>\n        <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n          <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n        </div>\n        <SubscribeFormButton type=\"submit\">\n          <span>Subscribe</span>\n        </SubscribeFormButton>\n      </form>\n  );\n};\n\nexport default SubscribeForm;\n"],"sourceRoot":""}