{"version":3,"sources":["webpack:///./src/components/AuthorCard.tsx","webpack:///./src/components/PostFullFooter.tsx","webpack:///./src/components/PostFullFooterRight.tsx","webpack:///./src/components/icons/infinity.tsx","webpack:///./src/components/ReadNextCard.tsx","webpack:///./src/components/subsribe/Subscribe.tsx","webpack:///./src/templates/post.tsx","webpack:///./src/pages/about.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/subsribe/SubscribeLogo.tsx","webpack:///./src/components/subsribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/subsribe/SubscribeForm.tsx","webpack:///./src/components/PostContent.tsx"],"names":["AuthorCardSection","Object","styled_base_browser_esm","target","name","styles","AuthorCardName","colors","darkgrey","AuthorCardContent","midgrey","AuthorCard","_ref","author","core_browser_esm","className","AuthorProfileImage","src","avatar","children","fixed","alt","id","gatsby_browser_entry","to","_","bio","PostFullFoot","PostFullFooter","props","PostFullFooterRightDiv","AuthorCardButton","emotion_esm","lighten","blue","PostFullFooterRight","authorId","InfinityIcon","xmlns","viewBox","d","ReadNextCardStyles","coverImage","ReadNextCardHeader","ReadNextCardHeaderSitetitle","ReadNextCardHeaderTitle","ReadNextDivider","ReadNextCardContent","ReadNextCardFooter","ReadNextCard","query","render","header","childImageSharp","fluid","config","title","tags","infinity","relatedPosts","edges","map","n","key","node","frontmatter","fields","slug","totalCount","data","_1676377518","SubscribeFormSection","whitegrey","SubscribeFormTitle","Subscribe","SubscribeForm","PostTemplate","PostFull","NoImage","PostFullHeader","PostFullMeta","PostFullMetaDate","PostFullTitle","setLightness","PostFullImage","lightgrey","DateDivider","ReadNextFeed","PageTemplate","post","markdownRemark","width","height","image","sizes","split","String","Number","aspectRatio","layouts","Helmet","lang","content","excerpt","property","siteUrl","pathContext","date","facebook","twitter","Wrapper","SiteHeader","outer","inner","SiteNav","SiteMain","dateTime","userDate","length","react","gatsby_image_default","a","style","PostContent","htmlAst","showSubscribe","subsribe_Subscribe","components_PostFullFooter","components_AuthorCard","components_PostFullFooterRight","components_ReadNextCard","pageContext","prev","PostCard","next","Footer","emotion__WEBPACK_IMPORTED_MODULE_0__","About","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_10___default","_components_Wrapper__WEBPACK_IMPORTED_MODULE_3__","_components_header_SiteNav__WEBPACK_IMPORTED_MODULE_4__","_templates_post__WEBPACK_IMPORTED_MODULE_7__","_components_PostContent__WEBPACK_IMPORTED_MODULE_8__","href","_components_Footer__WEBPACK_IMPORTED_MODULE_9__","SiteFooter","SiteFooterContent","SiteFooterNav","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","Date","getFullYear","SubscribeOverlayLogo","SubscribeLogo","logo","_553450523","SubscribeOverlay","Open","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","_this","_React$Component","call","this","escFunction","event","close","setState","isOpen","unsubscribeEsc","state","componentWillUnmount","subscribeEsc","document","addEventListener","removeEventListener","open","onClick","subsribe_SubscribeLogo","React","HomeNavRaise","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","subscribe","openModal","current","_this$props$isHome","isHome","SiteNavLogo","role","subsribe_SubscribeOverlay","ref","SubscribeFormStyles","SubscribeEmail","darken","SubscribeFormButton","mix","desaturate","FormGroup","action","mailchimpAction","method","noValidate","type","placeholder","position","left","aria-hidden","mailchimpName","tabIndex","PostFullContent","setSaturation","renderAst","rehypeReact","createElement","components","Compiler","Ast","ast","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","properties","_ref2"],"mappings":"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","file":"component---src-pages-about-tsx-b0a709334871ba90d759.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\n\nimport { colors } from '../styles/colors';\nimport { AuthorProfileImage } from '../styles/shared';\n\nconst AuthorCardSection = styled.section`\n  display: flex;\n`;\n\nconst AuthorCardName = styled.h4`\n  margin: 8px 0 2px 0;\n  padding: 0;\n  font-size: 2rem;\n\n  a {\n    color: ${colors.darkgrey};\n    font-weight: 700;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst AuthorCardContent = styled.section`\n  p {\n    margin: 0;\n    color: ${colors.midgrey};\n    line-height: 1.3em;\n  }\n`;\n\nexport interface AuthorCardProps {\n  author: any;\n}\n\nconst AuthorCard: React.FunctionComponent<AuthorCardProps> = ({ author }) => {\n  return (\n    <AuthorCardSection>\n      {/* TODO: default avatar */}\n      {/* TODO: author page url */}\n      <img className={`${AuthorProfileImage}`} src={author.avatar.children[0].fixed.src} alt={author.id} />\n      <AuthorCardContent>\n        <AuthorCardName>\n          <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.id}</Link>\n        </AuthorCardName>\n        {author.bio ? (\n          <p>{author.bio}</p>\n        ) : (\n          <p>\n            Read <Link to={`/author/${_.kebabCase(author.id)}/`}>more posts</Link> by this author.\n          </p>\n        )}\n      </AuthorCardContent>\n    </AuthorCardSection>\n  );\n};\n\nexport default AuthorCard;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst PostFullFoot = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n  padding: 3vw 0 6vw 0;\n  max-width: 840px;\n`;\n\nconst PostFullFooter: React.FunctionComponent = props => <PostFullFoot>{props.children}</PostFullFoot>;\n\nexport default PostFullFooter;\n","import { Link } from 'gatsby';\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\nimport { lighten } from 'polished';\n\nimport { colors } from '../styles/colors';\n\nconst PostFullFooterRightDiv = styled.div`\n  flex-shrink: 0;\n  margin-left: 20px;\n`;\n\nconst AuthorCardButton = css`\n  display: block;\n  padding: 9px 16px;\n  /* border: color(var(--midgrey) l(+20%)) 1px solid; */\n  border: ${lighten('0.2', colors.midgrey)} 1px solid;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1;\n  font-weight: 500;\n  border-radius: 20px;\n  transition: all ease 0.2s;\n\n  :hover {\n    border-color: ${colors.blue};\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n`;\n\nexport interface PostFullFooterRightProps {\n  authorId: string;\n}\n\nconst PostFullFooterRight: React.FunctionComponent<PostFullFooterRightProps> = props => (\n  <PostFullFooterRightDiv>\n    <Link className={`${AuthorCardButton}`} to={`/author/${_.kebabCase(props.authorId)}/`}>\n      Read More\n    </Link>\n  </PostFullFooterRightDiv>\n);\n\nexport default PostFullFooterRight;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst InfinityIcon: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n    <path d=\"M13 14.5s2 3 5 3 5.5-2.463 5.5-5.5S21 6.5 18 6.5c-5 0-7 11-12 11C2.962 17.5.5 15.037.5 12S3 6.5 6 6.5s4.5 3.5 4.5 3.5\" />\n  </svg>\n);\nexport default InfinityIcon;\n","import { Link, StaticQuery, graphql } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport * as _ from 'lodash';\n\nimport { colors } from '../styles/colors';\nimport InfinityIcon from './icons/infinity';\nimport config from '../website-config';\n\nexport interface ReadNextCardStylesProps {\n  coverImage: string;\n}\n\nconst ReadNextCardStyles = styled.article<ReadNextCardStylesProps>(\n  props => `\n  position: relative;\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  padding: 25px;\n  color: #fff;\n  background: ${colors.darkgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  background-image: url(\"${props.coverImage}\");\n\n  :before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: block;\n    background: linear-gradient(135deg, rgba(0,40,60,0.8) 0%,rgba(0,20,40,0.7) 100%);\n    border-radius: 5px;\n    backdrop-filter: blur(2px);\n  }\n`,\n);\n\nconst ReadNextCardHeader = styled.header`\n  position: relative;\n  z-index: 50;\n  padding-top: 20px;\n  text-align: center;\n`;\n\nconst ReadNextCardHeaderSitetitle = styled.small`\n  display: block;\n  font-size: 1.3rem;\n  line-height: 1.3em;\n  opacity: 0.8;\n`;\n\nconst ReadNextCardHeaderTitle = styled.h3`\n  margin: 0;\n  padding: 0 20px;\n  color: #fff;\n  font-size: 3rem;\n  line-height: 1.2em;\n  letter-spacing: 1px;\n\n  a {\n    color: #fff;\n    font-weight: 300;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: none;\n  }\n`;\n\nconst ReadNextDivider = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n\n  svg {\n    width: 40px;\n    fill: transparent;\n    stroke: #fff;\n\n    stroke-width: 0.5px;\n    stroke-opacity: 0.65;\n  }\n`;\n\nconst ReadNextCardContent = styled.div`\n  position: relative;\n  z-index: 50;\n  flex-grow: 1;\n  display: flex;\n  font-size: 1.7rem;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    list-style: none;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    line-height: 1.25em;\n    font-weight: 200;\n    letter-spacing: -0.5px;\n  }\n\n  li a {\n    display: block;\n    padding: 20px 0;\n    border-bottom: rgba(255, 255, 255, 0.3) 1px solid;\n    color: #fff;\n    font-weight: 500;\n    vertical-align: top;\n    transition: opacity 0.3s ease;\n  }\n\n  li:first-of-type a {\n    padding-top: 10px;\n  }\n\n  li a:hover {\n    opacity: 1;\n  }\n`;\n\nconst ReadNextCardFooter = styled.footer`\n  position: relative;\n  margin: 15px 0 3px 0;\n  text-align: center;\n\n  a {\n    color: #fff;\n  }\n`;\n\nexport interface ReadNextProps {\n  tags: string[];\n  relatedPosts: {\n    totalCount: number;\n    edges: {\n      node: {\n        timeToRead: number;\n        frontmatter: {\n          title: string;\n        };\n        fields: {\n          slug: string;\n        };\n      };\n    }[];\n  };\n}\n\nexport interface ReadNextQuery {\n  header: {\n    childImageSharp: {\n      fluid: any;\n    };\n  };\n}\n\nconst ReadNextCard: React.FunctionComponent<ReadNextProps> = props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query ReadNextQuery {\n          header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\n            childImageSharp {\n              # Specify the image processing specifications right in the query.\n              # Makes it trivial to update as your page's design changes.\n              fluid(maxWidth: 2000) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      // tslint:disable-next-line:react-this-binding-issue\n      render={({ header }: ReadNextQuery) => (\n        <ReadNextCardStyles coverImage={header.childImageSharp.fluid.src}>\n          <ReadNextCardHeader>\n            <ReadNextCardHeaderSitetitle>\n              &mdash; {config.title} &mdash;\n            </ReadNextCardHeaderSitetitle>\n            <ReadNextCardHeaderTitle>\n              <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>{props.tags[0]}</Link>\n            </ReadNextCardHeaderTitle>\n          </ReadNextCardHeader>\n          <ReadNextDivider>\n            <InfinityIcon />\n          </ReadNextDivider>\n          <ReadNextCardContent>\n            <ul>\n              {props.relatedPosts.edges.map(n => {\n                return (\n                  <li key={n.node.frontmatter.title}>\n                    <Link to={n.node.fields.slug}>{n.node.frontmatter.title}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </ReadNextCardContent>\n          <ReadNextCardFooter>\n            <Link to={`/tags/${_.kebabCase(props.tags[0])}/`}>\n              {props.relatedPosts.totalCount > 1 &&\n                `See all ${props.relatedPosts.totalCount} posts`}\n              {props.relatedPosts.totalCount === 1 && `1 post`}\n              {props.relatedPosts.totalCount === 0 && `No posts`} →\n            </Link>\n          </ReadNextCardFooter>\n        </ReadNextCardStyles>\n      )}\n    />\n  );\n};\n\nexport default ReadNextCard;\n","import { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport SubscribeForm from './SubscribeForm';\n\n\nconst SubscribeFormSection = styled.section`\n  margin: 1.5em 0;\n  padding: 6.5vw 7vw 7vw;\n  /* border: color(var(--whitegrey) l(+2%)) 1px solid; */\n  border: ${lighten('0.02', colors.whitegrey)} 1px solid;\n  text-align: center;\n  /* background: color(var(--whitegrey) l(+4%)); */\n  background: ${lighten('0.04', colors.whitegrey)};\n  border-radius: 7px;\n\n  p {\n    margin-bottom: 1em;\n    color: ${colors.midgrey};\n    font-size: 2.2rem;\n    line-height: 1.55em;\n    letter-spacing: 0.2px;\n  }\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 420px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n  @media (max-width: 650px) {\n    p {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst SubscribeFormTitle = css`\n  margin: 0 0 3px 0;\n  padding: 0;\n  color: ${colors.darkgrey};\n  font-size: 3.5rem;\n  line-height: 1;\n  font-weight: 700;\n  @media (max-width: 650px) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport interface SubscribeProps {\n  title: string;\n}\n\nconst Subscribe: React.FunctionComponent<SubscribeProps> = props => {\n  return (\n    <SubscribeFormSection>\n      <h3 className={`${SubscribeFormTitle}`}>Subscribe to {props.title}</h3>\n      <p>Get the latest posts delivered right to your inbox</p>\n      <SubscribeForm />\n    </SubscribeFormSection>\n  );\n};\n\nexport default Subscribe;\n","import { graphql, Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\nimport { Helmet } from 'react-helmet';\n\nimport AuthorCard from '../components/AuthorCard';\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport PostContent from '../components/PostContent';\nimport PostFullFooter from '../components/PostFullFooter';\nimport PostFullFooterRight from '../components/PostFullFooterRight';\nimport ReadNextCard from '../components/ReadNextCard';\nimport Subscribe from '../components/subsribe/Subscribe';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteHeader, SiteMain } from '../styles/shared';\nimport config from '../website-config';\n\nconst PostTemplate = css`\n  .site-main {\n    background #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  margin: 0 auto;\n  padding: 6vw 3vw 3vw;\n  max-width: 1040px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    padding: 14vw 3vw 10vw;\n  }\n`;\n\nconst PostFullMeta = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.midgrey};\n  font-size: 1.4rem;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  @media (max-width: 500px) {\n    font-size: 1.2rem;\n    line-height: 1.3em;\n  }\n`;\n\nconst PostFullMetaDate = styled.time`\n  color: ${colors.blue};\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    font-size: 2.9rem;\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 0 -10vw -165px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 0 -4vw -100px;\n    height: 600px;\n    border-radius: 0;\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nconst DateDivider = styled.span`\n  display: inline-block;\n  margin: 0 6px 1px;\n`;\n\nconst ReadNextFeed = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\ninterface PageTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      timeToRead: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        tags: string[];\n        author: {\n          id: string;\n          bio: string;\n          avatar: {\n            children: {\n              fixed: {\n                src: string;\n              };\n            }[];\n          };\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: {\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  timeToRead: number;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    title: string;\n    date: string;\n    tags: string[];\n    author: {\n      id: string;\n      bio: string;\n      avatar: {\n        children: {\n          fixed: {\n            src: string;\n          };\n        }[];\n      };\n    };\n  };\n}\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = props => {\n  const post = props.data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta property=\"og:image\" content={config.siteUrl + post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {post.frontmatter.image && (\n          <meta name=\"twitter:image\" content={config.siteUrl + post.frontmatter.image.childImageSharp.fluid.src} />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author.id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && <meta name=\"twitter:site\" content={`@${config.twitter.split('https://twitter.com/')[1]}`} />}\n        {config.twitter && <meta\n          name=\"twitter:creator\"\n          content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n        />}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper className={`${PostTemplate}`}>\n        <header className={`${SiteHeader} ${outer}`}>\n          <div className={`${inner}`}>\n            <SiteNav />\n          </div>\n        </header>\n        <main id=\"site-main\" className={`site-main ${SiteMain} ${outer}`}>\n          <div className={`${inner}`}>\n            {/* TODO: no-image css tag? */}\n            <article className={`${PostFull} ${!post.frontmatter.image ? NoImage : ''}`}>\n              <PostFullHeader>\n                <PostFullMeta>\n                  <PostFullMetaDate dateTime={post.frontmatter.date}>\n                    {post.frontmatter.userDate}\n                  </PostFullMetaDate>\n                  {post.frontmatter.tags &&\n                    post.frontmatter.tags.length > 0 && (\n                      <>\n                        <DateDivider>/</DateDivider>\n                        <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                          {post.frontmatter.tags[0]}\n                        </Link>\n                      </>\n                    )}\n                </PostFullMeta>\n                <PostFullTitle>{post.frontmatter.title}</PostFullTitle>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n\n              <PostFullFooter>\n                <AuthorCard author={post.frontmatter.author} />\n                <PostFullFooterRight authorId={post.frontmatter.author.id} />\n              </PostFullFooter>\n            </article>\n          </div>\n        </main>\n\n        {/* Links to Previous/Next posts */}\n        <aside className={`read-next ${outer}`}>\n          <div className={`${inner}`}>\n            <ReadNextFeed>\n              {props.data.relatedPosts && (\n                <ReadNextCard tags={post.frontmatter.tags} relatedPosts={props.data.relatedPosts} />\n              )}\n\n              {props.pageContext.prev && <PostCard post={props.pageContext.prev} />}\n              {props.pageContext.next && <PostCard post={props.pageContext.next} />}\n            </ReadNextFeed>\n          </div>\n        </aside>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default PageTemplate;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fixed(quality: 100) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 3\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          timeToRead\n          excerpt\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import IndexLayout from '../layouts';\nimport Wrapper from '../components/Wrapper';\nimport SiteNav from '../components/header/SiteNav';\nimport { SiteHeader, outer, inner, SiteMain } from '../styles/shared';\nimport * as React from 'react';\nimport { css } from 'emotion';\n\nimport { PostFullHeader, PostFullTitle, NoImage, PostFull } from '../templates/post';\nimport { PostFullContent } from '../components/PostContent';\nimport Footer from '../components/Footer';\nimport Helmet from 'react-helmet';\n\nconst PageTemplate = css`\n  .site-main {\n    background #fff;\n    padding-bottom: 4vw;\n  }\n`;\n\n\nconst About: React.FunctionComponent = () => (\n  <IndexLayout>\n    <Helmet>\n      <title>About</title>\n    </Helmet>\n    <Wrapper className={`${PageTemplate}`}>\n      <header className={`${SiteHeader} ${outer}`}>\n        <div className={`${inner}`}>\n          <SiteNav />\n        </div>\n      </header>\n      <main id=\"site-main\" className={`site-main ${SiteMain} ${outer}`}>\n        <article className={`${PostFull} post page ${NoImage}`}>\n          <PostFullHeader>\n            <PostFullTitle>About</PostFullTitle>\n          </PostFullHeader>\n\n          <PostFullContent className=\"post-full-content\">\n            <div className=\"post-content\">\n              <p>\n                Ghost is professional publishing platform designed for modern journalism. This is a\n                demo site of a basic Ghost install to give you a general sense of what a new Ghost\n                site looks like when set up for the first time.\n              </p>\n              <blockquote>\n                <p>\n                  If you'd like to set up a site like this for yourself, head over to{' '}\n                  <a href=\"https://ghost.org\">Ghost.org</a> and start a free 14 day trial to give\n                  Ghost a try!\n                </p>\n              </blockquote>\n              <p>\n                If you're a developer: Ghost is a completely open source (MIT) Node.js application\n                built on a JSON API with an Ember.js admin client. It works with MySQL and SQLite,\n                and is publicly available <a href=\"https://github.com/TryGhost/ghost\">on Github</a>.\n              </p>\n              <p>\n                If you need help with using Ghost, you'll find a ton of useful articles on{' '}\n                <a href=\"https://help.ghost.org\">our knowledgebase</a>, as well as extensive{' '}\n                <a href=\"https://docs.ghost.org\">developer documentation</a>.\n              </p>\n            </div>\n          </PostFullContent>\n        </article>\n      </main>\n      <Footer />\n    </Wrapper>\n  </IndexLayout>\n);\n\nexport default About;\n","import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <footer className={`${outer} ${SiteFooter}`}>\n      <div className={`${inner} ${SiteFooterContent}`}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n\n          {/* {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )} */}\n\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { graphql, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\n\nimport config from '../../website-config';\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/logo-square.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )\n    }\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\nconst SubscribeOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: 0;\n  transition: opacity 200ms ease-in;\n  pointer-events: none;\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--blue) whiteness(+7%)),\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--blue) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`;\n\nconst Open = css`\n  opacity: 1;\n  pointer-events: auto;\n`;\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`;\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`;\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-family: Georgia, serif;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`;\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open() {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  }\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay className={`${this.state.isOpen ? Open : ''}`}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Subscribe to {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date! Get all the latest &amp; greatest posts delivered straight to your\n            inbox\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subsribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\ninterface SiteNaveState {\n  isOpen: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  constructor(props: SiteNavProps) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  }\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav className={`${isHome ? HomeNavRaise : ''} ${SiteNavStyles}`}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul className={`${NavStyles}`} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            {/* <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li> */}\n            <li role=\"menuitem\">\n              <Link to=\"/tags/projects/\">Projects</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/blog-post/\">Blog</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n             {/* {config.facebook && (\n              <a\n                className={`${SocialLink}`}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )} */}\n            {/* {config.twitter && (\n              <a\n                className={`${SocialLink}`}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )} */}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && (\n            <SubscribeModal ref={this.subscribe} />\n          )}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`;\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  border: ${lighten('0.07', colors.lightgrey)};\n  color: ${colors.midgrey};\n  font-size: 1.8rem;\n  line-height: 1em;\n  font-weight: normal;\n  user-select: text;\n  border-radius: 5px;\n  transition: border-color 0.15s linear;\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.lightgrey)};\n  }\n`;\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--blue) whiteness(+7%)),\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--blue) lightness(-4%) saturation(-10%))\n  ); */\n  background: linear-gradient(\n    ${mix('0.1', '#fff', colors.blue)},\n    ${desaturate('0.1', darken('0.07', colors.blue))} 60%,\n    ${desaturate('0.1', darken('0.07', colors.blue))} 90%,\n    ${desaturate('0.1', darken('0.04', colors.blue))}\n  );\n  border-radius: 5px;\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst SubscribeForm: React.FunctionComponent = () => {\n  return (\n      <form\n        className={`${SubscribeFormStyles}`}\n        action={config.mailchimpAction}\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        noValidate\n      >\n        {/* This is required for the form to work correctly  */}\n        <FormGroup className=\"form-group\">\n          <SubscribeEmail className=\"subscribe-email\" type=\"email\" name=\"EMAIL\" placeholder=\"youremail@example.com\" />\n        </FormGroup>\n        <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n          <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n        </div>\n        <SubscribeFormButton type=\"submit\">\n          <span>Subscribe</span>\n        </SubscribeFormButton>\n      </form>\n  );\n};\n\nexport default SubscribeForm;\n","import { lighten, setLightness, darken, setSaturation } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport rehypeReact from 'rehype-react';\n\nimport { colors } from '../styles/colors';\n\nexport const PostFullContent = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 100px 0;\n  min-height: 230px;\n  font-family: Georgia, serif;\n  font-size: 2.2rem;\n  line-height: 1.6em;\n  background: #fff;\n\n  @media (max-width: 1170px) {\n    padding: 5vw 7vw 0;\n  }\n  @media (max-width: 800px) {\n    font-size: 1.9rem;\n  }\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 15px;\n    left: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(-5deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 15px;\n    right: -5px;\n    z-index: -1;\n    display: block;\n    width: 20px;\n    height: 200px;\n    background: rgba(39, 44, 49, 0.15);\n    filter: blur(5px);\n    transform: rotate(5deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  dl,\n  pre,\n  blockquote,\n  .post-full-comments,\n  .footnotes {\n    min-width: 100%;\n  }\n\n  li {\n    word-break: break-word;\n  }\n\n  li p {\n    margin: 0;\n  }\n\n  a {\n    color: #000;\n    word-break: break-word;\n    box-shadow: ${colors.blue} 0 -1px 0 inset;\n  }\n\n  a:hover {\n    color: ${colors.blue};\n    text-decoration: none;\n  }\n\n  strong,\n  em {\n    /* color: color(var(--darkgrey) l(-5%)); */\n    color: ${darken('0.05', colors.darkgrey)};\n  }\n\n  small {\n    display: inline-block;\n    line-height: 1.6em;\n  }\n\n  li:first-child {\n    margin-top: 0;\n  }\n\n  img,\n  video {\n    display: block;\n    margin: 1.5em auto;\n    max-width: 1040px;\n    height: auto;\n  }\n  @media (max-width: 1040px) {\n    img,\n    video {\n      width: 100%;\n    }\n  }\n\n  img[src$='#full'] {\n    max-width: none;\n    width: 100vw;\n  }\n\n  img + br + small {\n    display: block;\n    margin-top: -3em;\n    margin-bottom: 1.5em;\n    text-align: center;\n  }\n\n  /* Override third party iframe styles */\n  iframe {\n    margin: 0 auto !important;\n  }\n\n  blockquote {\n    margin: 0 0 1.5em;\n    padding: 0 1.5em;\n    border-left: #3eb0ef 3px solid;\n  }\n\n  blockquote p {\n    margin: 0 0 1em 0;\n    color: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    font-style: italic;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n\n  code {\n    padding: 0 5px 2px;\n    font-size: 0.8em;\n    line-height: 1em;\n    font-weight: 400 !important;\n    background: ${colors.whitegrey};\n    border-radius: 3px;\n  }\n\n  p code {\n    word-break: break-all;\n  }\n\n  pre {\n    overflow-x: auto;\n    margin: 1.5em 0 3em;\n    padding: 20px;\n    max-width: 100%;\n    /* border: color(var(--darkgrey) l(-10%)) 1px solid; */\n    border: ${darken('0.01', colors.darkgrey)} 1px solid;\n    color: ${colors.whitegrey};\n    font-size: 1.4rem;\n    line-height: 1.5em;\n    /* background: color(var(--darkgrey) l(-3%)); */\n    background: ${darken('0.03', colors.darkgrey)};\n    border-radius: 5px;\n  }\n\n  pre code {\n    padding: 0;\n    font-size: inherit;\n    line-height: inherit;\n    background: transparent;\n  }\n\n  pre code :not(span) {\n    color: inherit;\n  }\n\n  /* .fluid-width-video-wrapper { */\n  .gatsby-resp-iframe-wrapper {\n    margin: 1.5em 0 3em;\n  }\n\n  hr {\n    margin: 4vw 0;\n  }\n\n  hr:after {\n    content: '';\n    position: absolute;\n    top: -15px;\n    left: 50%;\n    display: block;\n    margin-left: -10px;\n    width: 1px;\n    height: 30px;\n    /* background: color(var(--lightgrey) l(+10%)); */\n    background: ${lighten('0.1', colors.lightgrey)};\n    box-shadow: #fff 0 0 0 5px;\n    transform: rotate(45deg);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${setLightness('0.05', colors.darkgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  h1 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 4.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 3.6rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 2.6rem;\n    }\n  }\n\n  h3 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h4 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.8rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h4 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h5 {\n    display: block;\n    margin: 0.5em 0;\n    padding: 1em 0 1.5em;\n    border: 0;\n    color: ${colors.blue};\n    font-family: Georgia, serif;\n    font-size: 3.2rem;\n    line-height: 1.35em;\n    text-align: center;\n  }\n  @media (min-width: 1180px) {\n    h5 {\n      max-width: 1060px;\n    }\n  }\n  @media (max-width: 500px) {\n    h5 {\n      padding: 0 0 0.5em;\n      font-size: 2.2rem;\n    }\n  }\n\n  h6 {\n    margin: 0.5em 0 0.2em 0;\n    font-size: 2.3rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h6 {\n      font-size: 2rem;\n    }\n  }\n\n  /* Tables */\n  table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.6rem;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  table {\n    -webkit-overflow-scrolling: touch;\n    background: radial-gradient(ellipse at left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 0\n        center,\n      radial-gradient(ellipse at right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 75%) 100% center;\n    background-attachment: scroll, scroll;\n    background-size: 10px 100%, 10px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:first-child {\n    background-image: linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table td:last-child {\n    background-image: linear-gradient(\n      to left,\n      rgba(255, 255, 255, 1) 50%,\n      rgba(255, 255, 255, 0) 100%\n    );\n    background-position: 100% 0;\n    background-size: 20px 100%;\n    background-repeat: no-repeat;\n  }\n\n  table th {\n    color: ${colors.darkgrey};\n    font-size: 1.2rem;\n    font-weight: 700;\n    letter-spacing: 0.2px;\n    text-align: left;\n    text-transform: uppercase;\n    /* background-color: color(var(--whitegrey) l(+4%)); */\n    background-color: ${lighten('0.04', colors.whitegrey)};\n  }\n\n  table th,\n  table td {\n    padding: 6px 12px;\n    /* border: color(var(--whitegrey) l(-1%) s(-5%)) 1px solid; */\n    border: ${setSaturation('0.05', darken('0.01', colors.whitegrey))} 1px solid;\n  }\n\n  @media (max-width: 500px) {\n    padding: 0;\n    :before {\n      display: none;\n    }\n    :after {\n      display: none;\n    }\n  }\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  // components: { 'interactive-counter': Counter },\n  components: {},\n}).Compiler;\n\nconst Ast = ({ ast, ...props }: any) => {\n  ast.properties = props;\n  return renderAst(ast);\n};\n\nexport interface PostContentProps {\n  htmlAst: any;\n}\n\nconst PostContent: React.FunctionComponent<PostContentProps> = ({ htmlAst }) => {\n  return (\n    <PostFullContent className=\"post-full-content\">\n      {/* TODO: this will apply the class when rehype-react is published https://github.com/rhysd/rehype-react/pull/11 */}\n      <Ast className=\"post-content\" ast={htmlAst} />\n    </PostFullContent>\n  );\n};\n\nexport default PostContent;\n"],"sourceRoot":""}